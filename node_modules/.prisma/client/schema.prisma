generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  users     User[]
  projects  Project[]
}

model User {
  id              String       @id @default(uuid())
  email           String       @unique
  passwordHash    String
  name            String?
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  String
  createdAt       DateTime     @default(now())
  auditLogs       AuditLog[]
  projectsCreated Project[]    @relation("UserProjects")
}

model Project {
  id             String        @id @default(uuid())
  title          String
  description    String?
  status         ProjectStatus @default(ACTIVE)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organization   Organization  @relation(fields: [organizationId], references: [id])
  organizationId String
  createdBy      User?         @relation("UserProjects", fields: [createdById], references: [id])
  createdById    String?
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
}

model AuditLog {
  id        String   @id @default(uuid())
  userId    String
  action    String
  meta      Json?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Job {
  id        String    @id @default(uuid())
  type      String
  status    JobStatus @default(PENDING)
  payload   Json?
  result    Json?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum JobStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}
